{"version":3,"sources":["Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ContactsList.js","App.js","index.js","Components/Form/Form.module.css","Components/ContactsList/Contact.module.css"],"names":["Form","state","name","number","handleChangeInput","e","setState","target","value","resetInput","handleAddContact","preventDefault","props","onAddContacts","className","styles","form","onSubmit","this","item","type","pattern","title","required","onChange","button","Component","Filter","changeFilter","ContactsList","contacts","onRemoveContact","map","contact","items","onClick","id","App","filter","AddContact","newContact","inContact","find","toLowerCase","alert","prevState","uuidv4","ChangeFilter","console","log","removeContact","dataId","filterContact","includes","length","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ad5f9b84.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleAddContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContacts(this.state);\r\n    this.resetInput();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleAddContact}>\r\n        <label className={styles.item}>\r\n          <p>name</p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChangeInput}\r\n          />\r\n          <p>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChangeInput}\r\n          />\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onAddContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, changeFilter }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input type=\"text\" name=\"filter\" value={value} onChange={changeFilter} />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Contact.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onRemoveContact }) => {\r\n  return contacts.map((contact) => {\r\n    return (\r\n      <li className={styles.items} key={contact.id}>\r\n        <p className={styles.item}>{contact.name}:</p>\r\n        <p className={styles.item}>{contact.number}</p>\r\n        <button onClick={() => onRemoveContact(contact.id)}>Delete</button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Form from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport ContactsList from \"./Components/ContactsList\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  AddContact = (newContact) => {\n    const inContact = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (inContact) {\n      alert(`${inContact.name}  is already in contacts!`);\n      return;\n    }\n    this.setState((prevState) => ({\n      contacts: [{ ...newContact, id: uuidv4() }, ...prevState.contacts],\n    }));\n  };\n\n  ChangeFilter = (e) => {\n    console.log(e);\n\n    this.setState({ filter: e.target.value });\n  };\n\n  removeContact = (dataId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== dataId),\n      };\n    });\n  };\n\n  render() {\n    const filterContact = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <Form onAddContacts={this.AddContact} />\n\n        <h2>Contacts</h2>\n        {this.state.contacts.length > 1 && (\n          <Filter value={this.state.filter} changeFilter={this.ChangeFilter} />\n        )}\n        <ul>\n          <ContactsList\n            contacts={filterContact}\n            onRemoveContact={this.removeContact}\n          />\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1tWAy\",\"item\":\"Form_item__2-R5p\",\"button\":\"Form_button__3AFMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Contact_items__1as6G\",\"item\":\"Contact_item__28d4L\"};"],"sourceRoot":""}