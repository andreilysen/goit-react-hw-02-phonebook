{"version":3,"sources":["Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactsList/ContactListItem.js","Components/ContactsList/ContactsList.js","Components/App/App.js","index.js","Components/Form/Form.module.css","Components/ContactsList/Contact.module.css"],"names":["Form","state","name","number","handleChangeInput","e","setState","target","value","resetInput","handleAddContact","preventDefault","props","onAddContacts","className","styles","form","onSubmit","this","item","input","type","pattern","title","required","onChange","button","Component","Filter","changeFilter","ContactListItem","onClickRemove","items","onClick","ContactsList","contacts","onRemoveContact","length","map","id","App","filter","AddContact","newContact","inContact","find","contact","toLowerCase","alert","prevState","uuidv4","ChangeFilter","console","log","removeContact","dataId","filterContact","includes","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.484b0d9d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChangeInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  resetInput = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleAddContact = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContacts(this.state);\n    this.resetInput();\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleAddContact}>\n        <label className={styles.item}>\n          <p>name</p>\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChangeInput}\n          />\n          <p>Number</p>\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChangeInput}\n          />\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </label>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  onAddContacts: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"../Form/Form.module.css\";\n\nconst Filter = ({ value, changeFilter }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={changeFilter}\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Contact.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onClickRemove }) => (\r\n  <li className={styles.items}>\r\n    <p className={styles.item}>{name}:</p>\r\n    <p className={styles.item}>{number}</p>\r\n    <button onClick={onClickRemove}>Delete</button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  onClickRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\n\nimport PropTypes from \"prop-types\";\n\n// import styles from \"./Contact.module.css\";\n\nconst ContactsList = ({ contacts, onRemoveContact }) => {\n  return (\n    contacts.length > 0 && (\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            name={name}\n            number={number}\n            onClickRemove={() => onRemoveContact(id)}\n          />\n        ))}\n      </ul>\n    )\n  );\n  // contacts.map(({contact}) => {\n  // return (\n  //   <li className={styles.items} key={contact.id}>\n  //     <p className={styles.item}>{contact.name}:</p>\n  //     <p className={styles.item}>{contact.number}</p>\n  //     <button onClick={() => onRemoveContact(contact.id)}>Delete</button>\n  //   </li>\n  // );\n  // });\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport Form from \"../Form\";\nimport Filter from \"../Filter\";\nimport ContactsList from \"../ContactsList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  AddContact = (newContact) => {\n    const inContact = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (inContact) {\n      alert(`${inContact.name}  is already in contacts!`);\n      return;\n    }\n    this.setState((prevState) => ({\n      contacts: [{ ...newContact, id: uuidv4() }, ...prevState.contacts],\n    }));\n  };\n\n  ChangeFilter = (e) => {\n    console.log(e);\n\n    this.setState({ filter: e.target.value });\n  };\n\n  removeContact = (dataId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((contact) => contact.id !== dataId),\n      };\n    });\n  };\n\n  render() {\n    const filterContact = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <Form onAddContacts={this.AddContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} changeFilter={this.ChangeFilter} />\n        <ContactsList\n          contacts={filterContact}\n          onRemoveContact={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1tWAy\",\"item\":\"Form_item__2-R5p\",\"button\":\"Form_button__3AFMM\",\"input\":\"Form_input__1DXlf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Contact_items__1as6G\",\"item\":\"Contact_item__28d4L\"};"],"sourceRoot":""}